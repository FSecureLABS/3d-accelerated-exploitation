#ifndef MISC_H
#define MISC_H

#include <sstream>
#include <string>

template <typename T>
std::string to_str(const T & t) {
	std::ostringstream os;
	os << t;
	return os.str();
}

template <typename T>
std::string to_hex_str(const T & t) {
	std::ostringstream os;
	os << std::hex << t;
	return os.str();
}

/* some logging things */

void log(const char* prefix, const char* message);
void log(const char* prefix, std::string message);

#define LOG_INFO(x)				log("[!]", x);
#define LOG_SUCCESS(x)			log("[+]", x);
#define LOG_ERROR(x)			log("[-]", x);

#define LOG_INFO_INDENT(c, x) \
	for (auto i = 0; i < c; i++ ) printf("\t"); \
	log("[!]", x);

#define LOG_SUCCESS_INDENT(c, x) \
	for (auto i = 0; i < c; i++) printf("\t"); \
	log("\t[+]", x);

#define LOG_ERROR_INDENT(c, x) \
	for (auto i = 0; i < c; i++) printf("\t"); \
	log("\t[-]", x);

/* bailout */
void bailout(const char* message);
void bailout();

#endif
